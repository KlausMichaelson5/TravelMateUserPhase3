@page "/hotels/{hotelBookingString}"
@using Microsoft.AspNetCore.WebUtilities
@using System.Text.Json
@using TravelMateUI.Services
@using TravelMate.Models
@using TravelMateUI.Models
@using static TravelMateUI.Pages.Home
@inject NavigationManager NavigationManager
@inject ISearchUIService SearchService
@inject IWishListUIService WishListService
<style>
    .hotel-card {
        transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;
    }

        .hotel-card:hover {
            transform: scale(1.05);
            box-shadow: 0 0 15px rgba(0, 0, 0, 0.3);
        }

    .alert {
        z-index: 1050;
    }

</style>

<div class="text-center mb-4">
    <h2 class="active">Hotels in @hotelBooking.CityName</h2>
</div>

@if (hotels == null)
{
    <p>Loading...</p>
}
else if (hotels.Count == 0)
{
    <p>No hotels found in @hotelBooking.CityName.</p>
}
else
{
    <div>
        @foreach (var hotel in hotels)
        {
            <div class="card mb-4 hotel-card shadow-sm border-light">
                <div class="row no-gutters">
                    <div class="col-md-4">
                        <img src="@hotel.HotelImage" class="card-img" alt="@hotel.Name">
                    </div>
                    <div class="col-md-8">
                        <div class="card-body">
                            <h5 class="card-title">@hotel.Name</h5>
                            <p class="card-text">@hotel.Description</p>
                            <div class="d-flex align-items-center">
                                <i class="fas fa-map-marker-alt mr-2"></i>
                                <span>@hotel.City, @hotel.Country</span>
                            </div>
                            <div class="mt-3">
                                <a class="btn btn-primary" href="/rooms/@hotel.HotelId/@hotel.Name/@hotelBookingString">View Rooms</a>
                                <button class="btn btn-secondary mt-2" @onclick="() => AddToWishList(hotel)">Add to Wishlist</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
}

@if (isSuccessVisible)
{
    <div class="alert alert-success position-fixed bottom-0 end-0 m-3" role="alert">
        Hotel successfully added to wishlist!
    </div>
}

@code {
    [Parameter]
    public string hotelBookingString { get; set; }
    private List<Hotel> hotels;
    private SearchModel hotelBooking { get; set; } = new SearchModel();
    private int currentUserId = 1; // Assume you get this from the authentication context
    private bool isSuccessVisible = false;

    protected override async Task OnInitializedAsync()
    {
        hotelBooking = JsonSerializer.Deserialize<SearchModel>(hotelBookingString);
        await LoadHotels();
    }

    private async Task LoadHotels()
    {
        var allHotels = await SearchService.GetAllHotels();
        hotels = allHotels.Where(h => h.City.Equals(hotelBooking.CityName, StringComparison.OrdinalIgnoreCase)).ToList();
    }

    private async Task AddToWishList(Hotel hotel)
    {
        var wishListItem = new WishListTable
            {
                HotelId = hotel.HotelId,
                UserId = currentUserId,
                HotelImage = hotel.HotelImage,
                HotelName = hotel.Name
            };

        await WishListService.AddWishListItem(wishListItem, currentUserId);
        isSuccessVisible = true;
        StateHasChanged();

        await Task.Delay(10000); // Wait for 10 seconds
        isSuccessVisible = false;
        StateHasChanged();
    }
}

